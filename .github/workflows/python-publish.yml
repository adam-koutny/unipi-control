name: Upload Python Package

on:
  push:
    tags:
      - '*'

jobs:
  check-tag:
    runs-on: ubuntu-latest
    outputs:
      release-type: ${{ steps.check-tag.outputs.run_jobs }}
    steps:
      - name: check tag ${{ github.ref }}
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs\/tags\/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo ::set-output name=run_jobs::release
          elif [[ ${{ github.event.ref }} =~ ^refs\/tags\/[0-9]+\.[0-9]+\.[0-9]+-beta[0-9]+$ ]]; then
            echo ::set-output name=run_jobs::prerelease
          fi

  deploy:
    needs: [check-tag]
    if: needs.check-tag.outputs.release-type == 'release' || needs.check-tag.outputs.release-type == 'prerelease'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pipenv
        pipenv sync
        pipenv shell
    - name: black
      run: black --diff --check $(git ls-files '*.py')
    - name: flake8
      run: flake8 $(git ls-files '*.py')
    - name: mypy
      run: mypy $(git ls-files '*.py')
    - name: Build package
      run: python -m build
    - name: Publish test package
      if: needs.check-tag.outputs.release-type == 'prerelease'
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_TEST_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        verbose: true
    - name: Publish package
      if: needs.check-tag.outputs.release-type == 'release'
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
