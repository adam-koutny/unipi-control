name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - '*'

jobs:
  parameters:
    name: Parameters
    uses: superbox-dev/python-package-workflows/.github/workflows/parameters.yml@main
    with:
      json: ./.github/workflows/parameters.json

  validate:
    name: Validate
    if: |
      contains(fromJSON('["tag", "branch"]'), github.ref_type)
      && github.ref_name != 'main'
      && !endsWith(github.ref_name, '/merge')
    uses: superbox-dev/python-package-workflows/.github/workflows/validate-version.yml@main
    needs:
      - parameters
    with:
      latest-python-version: ${{ needs.parameters.outputs.latest-python-version }}

  unit-testing:
    name: Unit testing
    uses: superbox-dev/python-package-workflows/.github/workflows/unit-testing.yml@main
    needs:
      - parameters
    with:
      python-versions: ${{ needs.parameters.outputs.python-versions }}

  coverage:
    name: Coverage
    uses: superbox-dev/python-package-workflows/.github/workflows/coverage.yml@main
    needs:
      - parameters
      - unit-testing
    with:
      latest-python-version: ${{ needs.parameters.outputs.latest-python-version }}

  code-analyse:
    name: Code analyse
    uses: superbox-dev/python-package-workflows/.github/workflows/code-analyse.yml@main
    needs:
      - parameters
    with:
      python-versions: ${{ needs.parameters.outputs.python-versions }}

  security:
    name: Security
    uses: superbox-dev/python-package-workflows/.github/workflows/security.yml@main
    needs:
      - parameters
    with:
      latest-python-version: ${{ needs.parameters.outputs.latest-python-version }}

  build-python-package:
    name: Build python package
    if: |
      contains(fromJSON('["tag", "branch"]'), github.ref_type)
      && github.ref_name != 'main'
      && !endsWith(github.ref_name, '/merge')
    uses: superbox-dev/python-package-workflows/.github/workflows/build-python-package.yml@main
    needs:
      - parameters
      - validate
      - unit-testing
      - code-analyse
    with:
      latest-python-version: ${{ needs.parameters.outputs.latest-python-version }}
      package-version: ${{ needs.parameters.outputs.package-version }}

  build-binary-files:
    name: Build binary files
    if: |
      contains(fromJSON('["tag", "branch"]'), github.ref_type)
      && github.ref_name != 'main'
      && !endsWith(github.ref_name, '/merge')
    uses: superbox-dev/python-package-workflows/.github/workflows/build-binary-files.yml@main
    needs:
      - parameters
      - validate
      - unit-testing
      - code-analyse
    with:
      package-version: ${{ needs.parameters.outputs.package-version }}
      binary-files: ${{ needs.parameters.outputs.binary-files }}

  build-opkg-package:
    name: Build OPKG package
    needs:
      - parameters
      - build-binary-files
    uses: superbox-dev/python-package-workflows/.github/workflows/build-opkg-package.yml@main
    with:
      latest-python-version: ${{ needs.parameters.outputs.latest-python-version }}
      package-name: ${{ needs.parameters.outputs.package-name }}
      package-version: ${{ needs.parameters.outputs.package-version }}
      opkg-package: ${{ needs.parameters.outputs.opkg-package }}

  release:
    name: Release
    if: github.ref_type == 'tag'
    uses: superbox-dev/python-package-workflows/.github/workflows/release.yml@main
    needs:
      - parameters
      - build-python-package
      - build-opkg-package
    with:
      package-name: ${{ needs.parameters.outputs.package-name }}
      package-version: ${{ needs.parameters.outputs.package-version }}

  publish-on-ftp:
    name: Publish on FTP
    needs:
      - build-opkg-package
    uses: superbox-dev/python-package-workflows/.github/workflows/publish-on-ftp.yml@main
    with:
      ftp-hostname: ${{ vars.FTP_HOSTNAME }}
      ftp-port: ${{ vars.FTP_PORT }}
      ftp-username: ${{ vars.FTP_USERNAME }}
      ftp-publish-path: ${{ vars.FTP_PACKAGE_MAIN }}
    secrets:
      FTP_PASSWORD: ${{ secrets.FILES_SUPERBOX_ONE_FTP_PASSWORD }}

  # publish-on-pypi:
  #   name: Publish
  #   needs:
  #    - release
  #  uses: superbox-dev/python-package-workflows/.github/workflows/publish.yml@main
  #  secrets:
  #    PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
